name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: dalglish14/concourse-dcind

jobs:
  pr_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests
        run: echo "Running tests..." # Replace with actual test commands

  version_bump:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure the full history is fetched so we can push tags

      - name: Get current version
        id: get_version
        run: echo "::set-output name=current_version::$(cat VERSION)"
        
      - name: Increment version
        id: increment_version
        run: |
          current_version=${{ steps.get_version.outputs.current_version }}
          new_version=$(echo $current_version | awk -F. '{printf("%d.%d.%d", $1, $2, $3+1)}')
          echo "New version: $new_version"
          echo $new_version > VERSION
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add VERSION
          git commit -m "Bump version to $new_version"
          git tag $new_version
          git push https://${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }} HEAD:main --follow-tags
        shell: bash

  build_and_push:
    runs-on: ubuntu-latest
    needs: version_bump
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure the full history is fetched

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: dalglish14
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,pattern=main,tag=latest
            type=ref,event=tag,pattern=v*.*.*,tag={{version}}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
