name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: dalglish14/concourse-dcind

jobs:
  pr_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-test

  version_bump:
    runs-on: ubuntu-latest
    needs: pr_check
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if commit is already tagged and create new tag if necessary
        id: tag_commit
        run: |
          echo "Checking if the commit is already tagged"
          if ! git describe --tags --match "v*" --exact-match $GITHUB_SHA 2>&1 | grep "fatal"; then
            git describe --tags --match "v*" --abbrev=0 --exact-match $GITHUB_SHA > tag.txt
            echo "Commit is already tagged, using tag: $(cat tag.txt)"
          else
            echo "Getting previous tag"
            CURRENT_TAG=$(git describe --tags --match "v*" --abbrev=0)
            if [ "${CURRENT_TAG}" = "" ]; then
              echo "Can't find any tags"
              NEW_TAG="v1.0.0"
            else
              echo "Increment minor version"
              NEW_TAG=$(echo "${CURRENT_TAG}" | awk -F'[v.]' '{print "v"$2"."$3+1"."$4}')
            fi
            echo "$NEW_TAG" > tag.txt
            echo "Current tag is ${CURRENT_TAG}"
            echo "New tag is ${NEW_TAG}"
            echo "Creating new tag"
            git tag "${NEW_TAG}"
            echo "Saving new tag to VERSION file"
            echo "${NEW_TAG}" > VERSION
            git add VERSION
            git commit -m "Bump version to ${NEW_TAG}"
            git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
            git push origin "${NEW_TAG}"
          fi
        shell: bash

  build_and_push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: version_bump
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: dalglish14
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,pattern=main,tag=latest
            type=ref,event=tag,pattern=v*.*.*,tag={{version}}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
